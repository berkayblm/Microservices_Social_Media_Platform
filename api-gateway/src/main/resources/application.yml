server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: user-service
                fallbackUri: forward:/fallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 10
                redis-rate-limiter.burst-capacity: 20
                redis-rate-limiter.requested-tokens: 1

        - id: profile-service
          uri: lb://profile-service
          predicates:
            - Path=/api/profiles/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: profile-service
                fallbackUri: forward:/fallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 10
                redis-rate-limiter.burst-capacity: 20

        - id: post-service
          uri: lb://post-service
          predicates:
            - Path=/api/posts/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: post-service
                fallbackUri: forward:/fallback
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 15
                redis-rate-limiter.burst-capacity: 30

        - id: comment-service
          uri: lb://comment-service
          predicates:
            - Path=/api/comments/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: comment-service
                fallbackUri: forward:/fallback

        - id: like-service
          uri: lb://like-service
          predicates:
            - Path=/api/likes/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: like-service
                fallbackUri: forward:/fallback

        - id: auth-service
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**
          filters:
            - name: AuthenticationFilter


  data:
    redis:
      host: localhost
      password: 123456
      port: 6379
      timeout: 2000ms

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true

resilience4j:
  circuitbreaker:
    instances:
      user-service:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
      profile-service:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
      post-service:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s

jwt:
  secret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
  expiration: 86400000

management:
  endpoints:
    web:
      exposure:
        include: health

---
spring:
  data:
    redis:
      password: 123456
      host: localhost
      port: 6379
