version: '3.8'

services:
  # Database Services
  mysql:
    image: mysql:8.0
    container_name: mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: micro_profiles_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - micro-network
    command: --default-authentication-plugin=mysql_native_password

  mongodb:
    image: mongo:6.0
    container_name: mongodb-dev
    environment:
      MONGO_INITDB_DATABASE: followers_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - micro-network

  redis:
    image: redis:7-alpine
    container_name: redis-dev
    command: redis-server --requirepass 123456
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - micro-network

  # Development Tools
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 123456
    ports:
      - "8088:80"
    depends_on:
      - mysql
    networks:
      - micro-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8089:8081"
    depends_on:
      - mongodb
    networks:
      - micro-network

  redis-commander:
    image: rediscommander/redis-commander
    container_name: redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:123456
    ports:
      - "8090:8081"
    depends_on:
      - redis
    networks:
      - micro-network

volumes:
  mysql_data:
  mongodb_data:
  redis_data:

networks:
  micro-network:
    driver: bridge 